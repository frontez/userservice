docker build -t frontez/userservice:latest .
docker push frontez/userservice:latest

minikube start

kubectl create namespace m
helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
helm repo update
helm install nginx ingress-nginx/ingress-nginx --namespace m -f nginx-ingress.yaml  


cd..
helm install user-db oci://registry-1.docker.io/bitnamicharts/postgresql -f helm/values.yaml
cd k8s

kubectl apply -f configmap.yaml
kubectl apply -f secret.yaml
kubectl apply -f deployment.yaml
kubectl apply -f service.yaml
kubectl apply -f ingress.yaml

не нужно: kubectl port-forward svc/userservice 8000:80

sudo apt-get install -y postgresql-client
kubectl port-forward --namespace default svc/user-db-postgresql 5432:5432

minikube tunnel

Дополнительно:
Нужно указать в system32/drivers/etc/hosts
127.0.0.1 arch.homework 

Билд и создание code-first для EntityFramework
dotnet build
dotnet ef migrations add InitialMigration
dotnet ef database update

Проверка БД
psql -U sa -p 5432 -h 127.0.0.1 -d UserService

-------------
ДЗ Мониторинг
-------------
Prometheus

helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo update

helm install prometheus prometheus-community/prometheus

kubectl get pods -l app.kubernetes.io/name=prometheus
kubectl get svc -l app.kubernetes.io/name=prometheus
-----------
Grafana

helm repo add grafana https://grafana.github.io/helm-charts
helm repo update

helm install grafana grafana/grafana

kubectl get pods -l app.kubernetes.io/name=grafana
kubectl get svc -l app.kubernetes.io/name=grafana

kubectl get secret --namespace default grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo
-------------


kubectl get svc --all-namespaces -o jsonpath='{range .items[*]}{.metadata.name}.{.metadata.namespace}.svc:{.spec.ports[0].port}{"\n"}{end}'


helm install nginx ingress-nginx/ingress-nginx --namespace ingress-nginx -f nginx-ingress.yaml  